---
title: "Analyzing NBA Data Draft 3"
author: "Gavin Daves, Grant Thompson, Evan Brown, Seyaul Kim"
date: 'February 22, 2024'
format:
  pdf: default
  html: default
pdf-engine: pdflatex
editor: visual
fontsize: 10pt
geometry: margin=1in
toc: true                   # add table of contents at the beginning
toc-depth: 2                # Only titles that start with # or ##
---

## Analyzing how the Game of Basketball Developed Over Time

The National Basketball Association (NBA) has been in commission since 1946, and has become one of the most well-known sports organizations in history. Over 65,000 games have been played since the birth of the league, and our group was able to find a dataset of play-by-play data from each of these games. Our dataset (see below) has notable columns such as play descriptions, score margins, players involved, and time remaining in the game. Ultimately, our group seeks to analyze many relationships including players (and their characteristics), teams, time, among other statistics.

We are looking at how the NBA and the game of basketball has developed over time. To start, we analyzed the frequency of the three point shot, and the shooting skill of players in general. We wanted to find statistical evidence that supports the current trend of three pointers and skilled big-men.

```{r setup, echo=FALSE, include=FALSE}
## The following line is an overall configuration
## asking that the R code is displayed.
## Set to FALSE to avoid showing the code by default
## (required for your final project, where you are not supposed
##  to show code)
knitr::opts_chunk$set(echo = TRUE)
```

```{r, echo=FALSE, include=FALSE}
library(data.table)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggalt)
```

### Cleaning the Primary Data Set / Extracting Information

Our play-by-play data table has 13 million rows and 34 columns. In cleaning our data, we dropped a few columns that we didn't have use for, such as the "video_available_flag" column. In addition, we used REGEX to extract information from the "description" columns. In doing so, we were able to get new columns like jumpsuit distance.

### Cleaning the Secondary Data Set / Extracting Information

Here, we are making the data a bit more suitable for analysis by dropping unnecessesary/unnapplicable rows (for instance, we don't need International league stats, as we are only focused on the NBA). We are also adding columns that are combinations of operations on the other columns for ease of use later in our data analysis (ex. PTS / GP = PPG).

```{r, echo=FALSE}
player_stats <- read.csv("player_stats.csv")
player_stats <- player_stats[player_stats$Stage != "International", ]
player_stats$FieldGoalPercentage <- player_stats$FGM / player_stats$FGA * 100
player_stats$ThreePointPercentage <- player_stats$X3PM / player_stats$X3PA * 100
player_stats$ThreePointPercentage[is.nan(player_stats$ThreePointPercentage) | is.na(player_stats$ThreePointPercentage)] <- 0

player_stats$Season <- substring(player_stats$Season, 1,4)

player_stats["MPG"] <- player_stats$MIN/player_stats$GP
player_stats["PPG"] <- player_stats$PTS/player_stats$GP

player_stats["missed_shots"] <- player_stats$FGA - player_stats$FGM
```

### Model creation

We will create subsets of the data that correspond to season stats for 199, 2004, 2009, 2014, and 2019 to analyze how certain aspects of the NBA have changed over time.

```{r, echo=FALSE}

player_stats_99 <- subset(player_stats, Season == "1999")
player_stats_04 <- subset(player_stats, Season == "2004")
player_stats_09 <- subset(player_stats, Season == "2009")
player_stats_14 <- subset(player_stats, Season == "2014")
player_stats_19 <- subset(player_stats, Season == "2019")

```

### Average Shot Distances By Year

Trends and play styles change constantly in the NBA as different teams try different strategies to win games. This leads to a greater focus on different parts of the game, from speed of play to 3pt shots. This graph analyses how far from the basket on average players were attempting shots every year.

```{r, echo=FALSE}
# Graph specific
shot_only <- fread("shot_dist.csv")
shot_only <- shot_only[, c("game_date", "shot_dist")]
# Groups by year and find average shot distance for each year
shot_only$game_date <- as.factor(shot_only$game_date)

avg_dist <- data.frame(
  game_date = levels(shot_only$game_date),
  avg_shot_dist = numeric(length(levels(shot_only$game_date)))
)

for (i in 1:length(levels(shot_only$game_date))) {
  year <- levels(shot_only$game_date)[i]
  avg_dist$avg_shot_dist[i] <- mean(shot_only$shot_dist[shot_only$game_date == year], na.rm = TRUE)
}
```

```{r, echo=FALSE}
# Plots as a line graph
plot(avg_dist$game_date, avg_dist$avg_shot_dist,
     type="l", xlab="Year", ylab="Average Shot Distance",
     main="Average Distance of Attempted Shots in the NBA By Year",
     col="black")

tick_marks_x <- seq(min(avg_dist$game_date), max(avg_dist$game_date), by = 1)
labels_x <- ifelse(tick_marks_x %% 5 == 0, as.character(tick_marks_x), "")

axis(1, at = tick_marks_x, labels = labels_x, tick = TRUE)

tick_marks_y <- seq(floor(min(avg_dist$avg_shot_dist)), ceiling(max(avg_dist$avg_shot_dist)), by = 1)
labels_y <- ifelse(tick_marks_y %% 5 == 0, as.character(tick_marks_y), "")

axis(2, at = tick_marks_y, labels = labels_y, tick = TRUE)
```

We can see that the distance of shots increased up until around 2010, when they had a massive drop. This could be for a number of reasons, with one likely one being related to a play style revolution. It was around this time that teams realized how much more valuable 3pt shots were. Before this revolution, players often ignored 3pt shots to move a few feet closer. After this revolution, players either took a 3pt shot or moved twenty feet closer.

At the beginning of this revolution, it is possible that players realized that 2-point shots ten plus feet away from the basket were not worth it, leading to a complete disregard for these shots, even if they made sense, taking a lot of one or two foot shots instead. All things balance out though, as players likely took things to an extreme at the beginning, but started to move back to taking some long distance 2-point shots as time went on if the current state of the game warranted it, causing the average shot distance to start to rise again.


### Density Graph of All Shot Distances Prior to and After 2010

This plot shows the density of all shot distances in the offensive half. It focuses on comparing shots before and after 2010, when the supposed shooting "revolution" took place, as was discussed earlier. With this, we can see at what distance shots are most frequently taken at\
and what trends might come with that. It also displays the distance of the 3-point line in red.

```{r, echo=FALSE}
shots <- fread("shot_dist.csv")
shots <- shots[, c("game_date", "shot_dist", "player1_team_abbreviation")]
shots <- shots[shot_dist <= 47]
shots$distance_group <- cut(shots$shot_dist, 
                            breaks = seq(0, max(shots$shot_dist) + 3, by = 3), 
                            include.lowest = TRUE, 
                            right = FALSE)
shots$pivot <- ifelse(shots$game_date < 2010, "Before 2010", "After 2010")
shots$pivot <- factor(shots$pivot, levels = c("Before 2010", "After 2010"))
ggplot(data = shots) + 
  aes(x = 1, y = shot_dist) + 
  geom_violin(fill = "darkblue", color = "black", alpha = 0.7) + 
  labs(title = "Density of All Shot Distances in the Offensive Half", 
       x = "", 
       y = "Shot Distance") + 
  geom_abline(slope = 0, intercept = 23, color = "red") + 
  theme(axis.text.x = element_blank(), 
        axis.ticks.x = element_blank(), 
        plot.title = element_text(hjust = 0.5)) + 
  facet_wrap(~pivot, scales = "free_y") + 
  annotate("text", x = 1.375, y = 21, label = "3pt Line", color = "black", size=3.5)
```

This plot further reinforces the earlier idea that the shooting "revolution" in 2010 truly did change where players took shots from. As we can see in the plot, a significant proportion of shots were taken from 2-point mid-distance. After this revolution though, we can see that the proportion of shots taken from this distance significantly dropped, with a heavy increase in layups and a slight increase in longer distance 3 point shots. Players started to realize that taking a shot from mid-distance 2-point range didn't have much value, and took the ball towards the net or moved to 3-point range much more often.

### Minutes per game vs Points per game using Linear Regression

Our group found that player minutes vs. player points from the 1999 season seemed to have a positive correlation that was indicative of a linear relationship. We were interested in finding if this was the case for other seasons as well, so we decided to create models for the 1999, 2004, 2009, 2014, and 2019 seasons and plot their line of best fit to assess the possible linear relationships. After, we will plot all of the lines of best fit together to see how the lines vary over time.

```{r, echo=FALSE}

model_99 <- lm(player_stats_99$PPG ~ player_stats_99$MPG)
model_04 <- lm(player_stats_04$PPG ~ player_stats_04$MPG)
model_09 <- lm(player_stats_09$PPG ~ player_stats_09$MPG)
model_14 <- lm(player_stats_14$PPG ~ player_stats_14$MPG)
model_19 <- lm(player_stats_19$PPG ~ player_stats_19$MPG)

plot(player_stats_99$MPG, player_stats_99$PPG, xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "1999 Season MPG vs. PPG",)
abline(model_99, col = 'red')
plot(player_stats_04$MPG, player_stats_04$PPG, xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "2004 Season MPG vs. PPG",)
abline(model_04, col = 'blue')
plot(player_stats_09$MPG, player_stats_09$PPG, xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "2009 Season MPG vs. PPG",)
abline(model_09, col = 'green')
plot(player_stats_14$MPG, player_stats_14$PPG, xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "2014 Season MPG vs. PPG",)
abline(model_14, col = 'purple')
plot(player_stats_19$MPG, player_stats_19$PPG, xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "2019 Season MPG vs. PPG",)
abline(model_19, col = 'lightsalmon')


xrange <- c(0,50)
yrange <- c(0, 30)

plot(xrange, yrange, type = "n", xlab = "Minutes per Game", 
         ylab = "Points per Game", main = "MPG vs. PPG", col = 'white')
abline(model_99, col = 'red')
abline(model_04, col = 'blue')
abline(model_09, col = 'green')
abline(model_14, col = 'purple')
abline(model_19, col = 'lightsalmon')
legend("topleft", legend=c("1999", "2004", "2009", "2014", "2019"), col=c("red", "blue", "green", "purple","lightsalmon"), pch=c(19, 18), lty=1, cex = .75)
```

#### Summary of Regression Model:

In our regression models, we can see our regression lines adhering to the data quite well. Our line hits many of our data points, as well as having a similar number of points above and below the line. However, for each year there is a trend of our data veering far from the regression line as minutes per game increases. Based on the structure of our points, they seem almost exponential. When a player gets between 0 and 30 MPG, their PPG appears to be linearly related to the MPG. However, once a player starts playing more than 30 MPG, their PPG increases rapidly. This phenomenon could be answered by some qualitative observations. The players that play the most MPG are often the best players on the team. Therefore, the steep and sudden increase in PPG after 30 MPG makes sense, it is because the players who play more than 30 MPG are the best players in the league, known for their scoring abilities.

As we can see from the plots with their line of best fit, each year has a positive linear relationship with a line of best fit that adequately predicts points per game in respect to minutes per game. However, when analyzing the lines of best fit plotted together, all seasons have a quite similar intercept, and all have a very close slope to one another aside from the 2019 season. When going back and looking at the data for 2019 once again, we found that towards the higher end of minutes per game (33+), the spread of the data becomes increasingly noticeable, especially towards the higher end of the points per game spectrum as we approach 40+ minutes per game. This indicates that there may be outliers and bad leverage points, which we intend to explore in the future.

### Histogram of Heights over time

Our group was interested to see how the heights of NBA players have changed (or not) over time. So, we decided to create histograms, all with the same limits 160 centimeters is considered very short for an NBA player, and 230 centimeters is considered very tall).

```{r, echo=FALSE}

hist(player_stats_99$height_cm, breaks=8, xlim=c(160,230), xlab="Height (cm)", main="Heights of players in the 1999 Season")
hist(player_stats_04$height_cm, breaks=8, xlim=c(160,230), xlab="Height (cm)", main="Heights of players in the 2004 Season")
hist(player_stats_09$height_cm, breaks=8, xlim=c(160,230), xlab="Height (cm)", main="Heights of players in the 2009 Season")
hist(player_stats_14$height_cm, breaks=8, xlim=c(160,230), xlab="Height (cm)", main="Heights of players in the 2014 Season")
hist(player_stats_19$height_cm, breaks=8, xlim=c(160,230), xlab="Height (cm)", main="Heights of players in the 2019 Season")

```

From the data, we can see that from the 1999 to 2019, seasons the most common range for heights in all years was 200-210 centimeters. Also, the extreme heights (short and tall) seen in the 1999 and 2004 seasons do not appear in the future seasons,

### Shots Made to Shots Missed Pie Chart over time

Our group was interested in seeing the trends of shots missed to shots made in a season over time. We decided to create a pie chart to visualize the proportion of the 1999, 2004, 2009, 2014, and 2019 seasons.

From the pie charts, we can see that shot accuracy has stayed relatively constant over the period of time, as the percentages of shots made and shots missed are close to the same for every season sampled.

```{r}
# Combine data into a single data frame
seasons <- c("1999", "2004", "2009", "2014", "2019")

data <- data.frame(
  Season = rep(seasons, each = 2),
  Category = rep(c("Shots Missed", "Shots Made"), times = length(seasons)),
  Value = c(
    sum(player_stats_99$missed_shots, na.rm = TRUE),
    sum(player_stats_99$FGM, na.rm = TRUE),
    sum(player_stats_04$missed_shots, na.rm = TRUE),
    sum(player_stats_04$FGM, na.rm = TRUE),
    sum(player_stats_09$missed_shots, na.rm = TRUE),
    sum(player_stats_09$FGM, na.rm = TRUE),
    sum(player_stats_14$missed_shots, na.rm = TRUE),
    sum(player_stats_14$FGM, na.rm = TRUE),
    sum(player_stats_19$missed_shots, na.rm = TRUE),
    sum(player_stats_19$FGM, na.rm = TRUE)
  )
)

# Calculate percentages and labels
data$Percentage <- data$Value / tapply(data$Value, data$Season, sum)[data$Season] * 100
data$Label <- paste(data$Category, sprintf("%.0f%%", data$Percentage))

# Create faceted pie chart with custom colors
ggplot(data, aes(x = "", y = Percentage, fill = Category)) +
  geom_bar(stat = "identity", width = 1, color = "white") +
  coord_polar("y") +
  theme_void() +
  facet_wrap(~Season) +
  geom_text(aes(label = Label), position = position_stack(vjust = 0.5)) +
  scale_fill_manual(values = c("darkorchid1", "thistle3")) +  # Set custom colors
  labs(title = "Shots Made to Shots Missed by Season")
```

### Barchart of Average 3-Point Shooting Percentages of NBA Big-Men By Season

In recent years, the NBA has seen a historic rise in the three point shot. Teams are relying on it more than ever. At the same time, the NBA has placed a focus on the drafting and development of skilled big-men. Gone are the days of the back-to-the-basket big, who uses their pure size and strength to win down low in the post. Players like Nikola Jokic, Victor Wembanyama, and Karl-Anthony Towns are known for their ability to space the floor and hit the three point shot. We sought out to analyze this trend, to see if the data would back up our qualitative observations.

```{r, echo=FALSE}
# Convert height_cm to numeric
player_stats$height_cm <- as.numeric(player_stats$height_cm)

# Filter tall players
tall_players <- player_stats[player_stats$height_cm > 203, ]

# Filter tall players w ThreePointPercentage >= 30
tall_players_30plus <- tall_players[tall_players$ThreePointPercentage >= 30, ]

# Count the number of tall players who shot 30% or over by season
num_tall_players <- table(tall_players_30plus$Season)

# Convert the result to a data frame
result <- data.frame(Season = names(num_tall_players), NumTallPlayers = as.vector(num_tall_players))

# Set graphical parameters
par(cex.main = 0.9, cex.lab =0.9)

# Create bar plot with adjusted title and y-axis label size
barplot(result$NumTallPlayers, names.arg = result$Season, col = "blue",
        xlab = "Season", ylab = "Number of 6'8\"+ Players (3PT >= 30%)",
        main = "Number of 6'8\"+ Players who shot 30% or over from 3PT by Season")
grid()
```

We chose to go with the height 6'8" as it is the average height for a power forward. In this plot, we are aiming to examine the number of power forwards and centers that shoot \>30% from the three point line. From our graph, we can see that from 1999-2014 there are about 40 NBA big-men who shoot at least 30% from three. In recent years, namely since 2016, this number has doubled, with a massive jump from the 2014 season to the 2016 season. This graph lines up with our qualitative observations, that the NBA has observed a sudden and big jump in skilled big-men with shooting abilities.

### Stacked Barchart of 2-Point and 3-Point Shots Made By Top 10 NBA Players Each Year

Seeing how talented NBA players are naturally raises the question of who the best player is. This can be approximated by measuring the number of points a player makes. We aggregated the points each player made per season to see if we could see any trends regarding who the top scorers were.

```{r, echo=FALSE}
shots_data <- fread("shot_dist.csv")
shots_data[, score := as.character(score)]
shots_data$scoremargin <- as.numeric(gsub("TIE", "0", shots_data$scoremargin))
shots_data <- shots_data[score != ""]

shots_data <- shots_data[order(shots_data$game_id, shots_data$eventnum), ]

common_player_info <- fread("common_player_info.csv")
player_id_name_mapping <- common_player_info[, .(person_id, display_last_comma_first)]
shots_data <- merge(shots_data, player_id_name_mapping, by.x = "player1_id", by.y = "person_id", all.x = TRUE)

shots_data[, player1_name := fifelse(is.na(player1_name) | player1_name == "", display_last_comma_first, player1_name)]

# Convert scoremargin to numeric
shots_data$scoremargin <- as.numeric(as.character(shots_data$scoremargin))

# Handle cases where conversion to numeric introduces NAs due to conversion issues
# This is optional and depends on how you wish to handle non-numeric or problematic values
shots_data$scoremargin[is.na(shots_data$scoremargin)] <- 0

# Calculate points
shots_data$points <- rep(0, nrow(shots_data))

shots_data$points <- c(0, diff(shots_data$scoremargin))

# Identify the start of a new game
is_new_game <- c(TRUE, diff(shots_data$game_id) != 0)

# Correct points at the start of a new game
shots_data$points[is_new_game] <- shots_data$scoremargin[is_new_game]

shots_data$points <- pmin(pmax(shots_data$points, 0), 3)

# Determine shot type based on points
shots_data$shot_type <- ifelse(shots_data$points == 3, "3-pointer", "2-pointer")

shots_data[, shot_count := 1]  # Add a new column to count each shot

# Aggregate the count of shots by player, year, and shot type
shots_data_aggregated <- shots_data[, .(shots_made = .N), by = .(game_date, player1_name, shot_type)]

# Calculate total shots made for each player per year, across all shot types
shots_data_aggregated[, total_shots := sum(shots_made), by = .(game_date, player1_name)]
# 
# shots_data[, points := fifelse(shot_type == "2-pointer", 2, 3)]
# 
# # Aggregate points by player, year, and shot type
# shots_data_aggregated <- shots_data[, .(total_points = sum(points)), by = .(game_date, player1_name)]
# 
# # Calculate total points scored per year across all players
# total_points_by_year <- shots_data_aggregated[, .(total_yearly_points = sum(total_points)), by = .(game_date)]
# 
# # Order the results to see the years with the most points scored
# total_points_by_year_ordered <- total_points_by_year[order(-total_yearly_points)]
# 
# # Print the years with the most total points scored
# print(total_points_by_year_ordered)
# 
# Now get the top 20 players by year based on total shots made
top_shooters_by_year <- shots_data_aggregated[order(-total_shots), ][, head(.SD, 20), by = .(game_date)]

# Ensure the aggregated shot counts and shot types are correct for the top players, including total_shots
top_shooters_by_year <- top_shooters_by_year[, .(shots_made = sum(shots_made)), by = .(game_date, player1_name, shot_type, total_shots)]

years_of_interest <- c(1998, 2008, 2021)

# Create stacked barplots only for the specified years
for(year in years_of_interest) {
  # Check if the year is present in the dataset
    plot_data <- subset(top_shooters_by_year, game_date == year)
    p <- ggplot(plot_data, aes(x = reorder(player1_name, total_shots), y = shots_made, fill = shot_type)) +
      geom_bar(stat = "identity") +
      theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
      labs(title = paste("Top Shooters in", year), x = "Player", y = "Number of Shots Made") +
      scale_fill_manual(values = c("2-pointer" = "blue", "3-pointer" = "green")) +
      guides(fill = guide_legend(title = "Shot Type"))
    print(p)
}
```

In the above R script, the top 10 scorers in the 3 most interesting years in our current decade, past decade, and past 2 decades are represented in a stacked bar plot. The notion of 'most interesting' was determined by the years with the most number of points made. The number of 2 pointers and 3 pointers that the players made are the y-axis and the top 10 players ranked by the number of points scored is the x-axis. We chose to only show the top 10 players since modelling every player would obfuscate the details of the graph too much. From the data, we can see the players that scored the most points, what proportion of those shots were 2 pointers versus 3 pointers, and how the player did compared to other top scorers. A specific observation that we can make is LeBron James' dominance in the point scoring scene, which aligns with the qualitative observation that we can make regarding LeBron's status as one of the most prolific, if not the most prolific, scorers of all time.

### Heat Map of NBA Players By Nationality and Season

A growing trend in the NBA is their global outreach programs. In doing so, they have spread the game of basketball across the world, inspiring young athletes in many countries. In recent years, we have seen foreign NBA players like Nikola Jokic and Giannis Antetokounmpo dominate the league. We wanted to explore this trend, and provide evidence for this phenomenon of an increasing foreign presence in the NBA.

```{r, echo=FALSE}
# Function to keep only the first nationality
keep_first_nationality <- function(df, nationality_col) {
  # Split the nationality column by ' / ' and only keep the first element
  df[[nationality_col]] <- sapply(strsplit(df[[nationality_col]], " / "), `[`, 1)
  return (df)
}

# Apply the function to the nba_data dataset
player_stats <- keep_first_nationality(player_stats, "nationality")


# Filtering for specific years
selected_years <- c(1999, 2004, 2009, 2014, 2019)
player_stats_99_04_09_14_19 <- player_stats[player_stats$Season %in% selected_years,]

nationalities_of_interest <- c("Nigeria", "Canada", "France", "Serbia", "Australia")

# This creates a logical vector indicating rows where the Nationality column matches any nationality of interest
matches_nationality <- sapply(nationalities_of_interest, function(nat) grepl(nat, player_stats_99_04_09_14_19$nationality, ignore.case = TRUE))

# Reduce the matches_nationality matrix to a single logical vector where TRUE indicates a row matched any nationality
rows_to_keep <- apply(matches_nationality, 1, any)

# Filter nba_data_filtered based on rows_to_keep
nba_data_filtered <- player_stats_99_04_09_14_19[rows_to_keep,]


nba_data_counts <- nba_data_filtered %>%
  group_by(nationality, Season) %>%
  summarise(PlayerCount = n(), .groups = 'drop')



ggplot(nba_data_counts, aes(x = nationality, y = Season, fill = PlayerCount)) +
  geom_tile() +
  scale_fill_gradientn(colors = c('cyan1', 'cadetblue2', 'lightblue', 'blue', 'darkblue'), limits = c(0, 20)) +
  facet_wrap(~ Season, ncol = 1, scales = "free_y") + 
  labs(title = "NBA Players by Nationality and Season",
       x = "Nationality",
       y = "Season") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_discrete(breaks = 0) 
```

The heat map plots the number of players from Australia, Canada, France, Nigeria, and Serbia in the 1999, 2004, 2009, 2014, and 2019 seasons. We chose these countries as they represent the most foreign NBA players in the league today. Based on the results from the heat map, we can see that even in the past 2 decades, there were not many foreign players that joined the NBA. However, as we get closer to the current decade, it becomes obvious that the influence of the NBA has reached outside of the US because more people from all included countries in the graph have a higher density of people that join the NBA. This aligns with the qualitative observation that the NBA is becoming an increasingly popular sport that reaches well outside the confines of the US.

### Density Plot of Adjusted Player Rating By Draft Pick

In NBA dialogue, there has been a recurring theme that "the skill in the nba is higher than it has ever been." We wanted to start to unpack this qualitative observation with some quantitative values. To do so, we utilized the "Adjusted Player Rating" stat, and plotted the densities by position in the draft. In the NBA, a "lotter pick" refers to the first 14 picks. A late first round pick is a first round pick that occurs after the lottery. In this graph, we wanted to explore the different skill levels across positions in the draft, and explore how these skill levels have changed over time.

```{r, echo=FALSE}
player_stats_regular_season$draft_pick <- sprintf("%d.%02d", player_stats_regular_season$draft_round, player_stats_regular_season$draft_pick)

# Drop the original "draft_round" column
player_stats_regular_season <- subset(player_stats_regular_season, select = -c(draft_round))

# Assuming you have a data frame named player_stats_regular_season with columns: Season, Adjusted_player_rating, and Draft_pick

# Convert Draft_pick to numeric for comparison
player_stats_regular_season$Draft_numeric <- as.numeric(player_stats_regular_season$draft_pick)

# Create draft categories based on the specified ranges
player_stats_regular_season$Draft_category[player_stats_regular_season$Draft_numeric >= 1.01 & player_stats_regular_season$Draft_numeric <= 1.14] <- "Lottery Pick"
player_stats_regular_season$Draft_category[player_stats_regular_season$Draft_numeric >= 1.15 & player_stats_regular_season$Draft_numeric <= 1.30] <- "Late First Round"
player_stats_regular_season$Draft_category[player_stats_regular_season$Draft_numeric >= 2.01 & player_stats_regular_season$Draft_numeric <= 2.30] <- "Second Round"
player_stats_regular_season$Draft_category[player_stats_regular_season$Draft_numeric > 2.30] <- "Later Round Pick (Pre 1989 Pick)"
player_stats_regular_season$Draft_category[is.na(player_stats_regular_season$Draft_numeric)] <- "Undrafted"

# Specify the order of Draft categories
order_draft_categories <- c("Lottery Pick", "Late First Round", "Second Round", "Undrafted")
player_stats_regular_season$Draft_category <- factor(player_stats_regular_season$Draft_category, levels = order_draft_categories)


# Calculate average Adjusted_player_rating for each season
average_ratings <- aggregate(Adjusted_player_rating ~ Season, data = player_stats_regular_season, mean, na.rm = TRUE)

# Rename the Adjusted_player_rating column to "season_rating"
names(average_ratings)[names(average_ratings) == "Adjusted_player_rating"] <- "season_rating"

# Merge the average ratings back to the original data frame
player_stats_regular_season <- merge(player_stats_regular_season, average_ratings, by = "Season", all.x = TRUE)

filtered_data <- player_stats_regular_season[player_stats_regular_season$Draft_category != "Later Round Pick (Pre 1989 Pick)", ]

selected_years <- c(1999, 2009, 2019)
ggplot(filtered_data[filtered_data$Season %in% selected_years, ], aes(x = Adjusted_player_rating, fill = Draft_category)) +
  geom_density(alpha = 0.8) +
  labs(title = "Density Plot of Adjusted Player Rating",
       subtitle = "Grouped by Draft Category",
       caption = "Source: Your Data Source",
       x = "Adjusted Player Rating",
       fill = "Draft Category") +
  theme_minimal() +
  facet_grid(Season ~ Draft_category, scales = "free_y", space = "free_y") +  # Facet by season and Draft_category with free y-axes
  theme(
    axis.text.x = element_text(size = 8),  # Adjust x-axis text size
    axis.text.y = element_text(size = 8),  # Adjust y-axis text size
    strip.text = element_text(size = 8),    # Adjust facet label text size
  )
```

We can see quite a few interesting patterns in this plot. As predicted, the lottery picks consist of more "top players" (players with high adjusted player ratings) than any other draft position. In addition, we can see that the late first round and second round are rather similar in density of player rating. This trend breaks down in 2019, where we can see many more second round picks at a player rating of 4-8 than the late first round, as well as many more players with a player rating of 10-12. Over the years, we can see the curves shift right, towards more talented players. For example, any draft category in 2019 has significantly more players in the 10-12 player rating range than any previous draft category. This may imply that NBA teams have improved at draft prospect analysis and drafting. However, we can also notice that the skill of undrafted players has always hovered around a 4-8 player rating. But, in 2019, there is a noticeable spike in players with a rating above 8. This may imply that the skill of NBA prospects in general has increased over time, supporting the qualitative observations mentioned previously.

### Adjusted Player Rating

We decided to use a modified version of the PER (Player Efficiency Rating) to assign numerical values to player's individual seasons. This is calculated by the sum of their points, assists, rebounds, steals, blocks, made field goals, and made free throws. We then subtract field goal attempts, free throw attempts, and turnovers. We then divide this by (minutes \* season pace \* (15 / season efficiency)). Season pace is defined by the average number of possessions a team gets in 48 minutes. Season efficiency is defined by the average points scored per 100 possessions.

```{r, echo=FALSE}
# Assuming the League Pace Factor for all seasons is a constant value (e.g., 100)
constant_pace_factor <- c(93.1, 91.3,90.7,91.0, 90.1, 90.9, 90.5, 91.9, 92.4,91.7, 92.7, 92.1, 91.3, 92, 93.9, 93.9, 95.8, 96.4, 97.3, 100, 100.3)
adjustment_factor <- 15
league_efficiency <- c(104.1,103, 104.5,103.6, 102.9, 106.1, 106.2,  106.5, 107.5,108.3,107.6, 107.3, 104.6,105.8,106.6, 105.6,106.4, 108.8, 108.6, 110.4,110.6)

# Assuming player_stats is your data table
player_stats$Season_numeric <- as.integer(substr(player_stats$Season, 1, 4)) - 1998

# Filter data for Regular Season
player_stats_regular_season <- player_stats[player_stats$Stage == "Regular_Season", ]

calculate_PER <- function(player) {
  season_index <- player[["Season_numeric"]]

  pace <- constant_pace_factor[as.integer(season_index)]
  efficiency <- league_efficiency[as.integer(season_index)]

  # Convert relevant columns to numeric
  numeric_columns <- c("PTS", "AST", "REB", "STL", "BLK", "FGA", "FGM", "GP", "MIN", "FTM", "FTA", "TOV")
  player[numeric_columns] <- lapply(player[numeric_columns], as.numeric)

  # PER calculation
  per <- ((player[["PTS"]] + player[["AST"]] + player[["REB"]] + player[["STL"]] + player[["BLK"]] - player[["FGA"]] + player[["FGM"]] - player[["FTA"]] + player[["FTM"]] - player[["TOV"]]) / player[["MIN"]] * pace * (15 / efficiency))

  aper <- per * (constant_pace_factor[21] / pace) * (league_efficiency[21] / efficiency)

  

  return(aper)
}

player_stats_regular_season$Adjusted_player_rating <- apply(player_stats_regular_season, 1, calculate_PER)
```

```{r, echo=FALSE}
# Install ggalt package if not installed
#install.packages("ggalt")

# Assuming player_stats_regular_season is your original dataset
# Replace column names accordingly based on your actual dataset
# For example, replace "Adjusted_player_rating" and "Games_played" with actual column names

# Calculate the mean and standard deviation of "Adjusted_player_rating"
mean_rating <- mean(player_stats_regular_season$Adjusted_player_rating)
sd_rating <- sd(player_stats_regular_season$Adjusted_player_rating)

# Filter data for Adjusted_player_rating greater than 1
filter <- player_stats_regular_season[player_stats_regular_season$Adjusted_player_rating > 1, ]
filter <- filter[filter$MIN > 500,]

# Create a scatter plot with encircling for points greater than 1
ggplot(filter, aes(x = MIN, y = Adjusted_player_rating, label = Player, fill = Season)) +
  geom_point(shape = 21, size = 2, color = "black") +
  geom_encircle(aes(x = MIN, y = Adjusted_player_rating), 
                data = subset(filter, Adjusted_player_rating > 3.5 * sd_rating + mean_rating),
                color = "red", 
                size = 1.5,
                expand = 0.1, show.legend = FALSE, fill = NA) +
  geom_text(data = subset(filter, Adjusted_player_rating > 3.5 * sd_rating + mean_rating),
            aes(x = MIN, y = Adjusted_player_rating, label = Player),
            vjust = 1.5, hjust = -0.1, size = 2) +
  labs(title = "Plotting Adjusted Player Rating to Minutes Played",
       x = "Minutes Played",
       y = "Adjusted Player Rating") +
  scale_fill_manual(name = "Season", 
                    values = c("1999" = "blue", "2000" = "green", "2001" = "red", "2002" = "purple", "2003" = "orange",
                               "2004" = "brown", "2005" = "pink", "2006" = "cyan", "2007" = "grey", "2008" = "yellow",
                               "2009" = "magenta", "2010" = "darkgreen", "2011" = "violet", "2012" = "lightblue",
                               "2013" = "darkred", "2014" = "darkblue", "2015" = "darkorange", "2016" = "darkcyan",
                               "2017" = "darkgrey", "2018" = "black", "2019" = "darkmagenta"))
```

This plots players "Adjusted Player Rating" to minutes played, giving us a visualization of the spread of "Adjusted Player Ratings." As we can see, most of the NBA is centered around a player rating between 5-7. We can also see a few players have had great seasons, with player ratings around 12, oftentimes correlating to winning the MVP. We encircled players who had a player rating 3.5 standard deviations greater than the mean. As we can see, these include some of the greatest individual seasons of all time. We can see Curry's unanimous MVP season, the season Westbrook first averaged a triple double, becoming the first player to do so. We can also see Giannis' back-to-back MVP seasons.

